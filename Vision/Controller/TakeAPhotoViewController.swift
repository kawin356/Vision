//
//  ViewController.swift
//  AV Foundation
//
//  Created by Pranjal Satija on 5/22/17.
//  Copyright Â© 2017 Pranjal Satija. All rights reserved.
//

import UIKit
import Photos

class TakeAPhotoViewController: UIViewController {
    
    @IBOutlet fileprivate var captureButton: UIButton!
    
    ///Displays a preview of the video output generated by the device's cameras.
    @IBOutlet fileprivate var capturePreviewView: UIView!
    
    ///Allows the user to put the camera in photo mode.
    @IBOutlet fileprivate var photoModeButton: UIButton!
    @IBOutlet fileprivate var toggleCameraButton: UIButton!
    @IBOutlet fileprivate var toggleFlashButton: UIButton!
    
    ///Allows the user to put the camera in video mode.
    @IBOutlet fileprivate var videoModeButton: UIButton!
    
    @IBOutlet weak var collectionView: UICollectionView!
    let cameraController = CameraController()
    
    override var prefersStatusBarHidden: Bool { return true }
    
    var images: [GoogleOCR] {
        get {
            let sort = NSSortDescriptor(key: "date", ascending: false)
            return DataController.taskLoadData(type: GoogleOCR.self, search: nil, sort: sort)
        }
    }
    
}

//MARK: - App life Cycle
extension TakeAPhotoViewController {
    override func viewDidLoad() {
        
        func configureCameraController() {
            cameraController.prepare {(error) in
                if let error = error {
                    print(error)
                }
                
                try? self.cameraController.displayPreview(on: self.capturePreviewView)
            }
        }
        
        func styleCaptureButton() {
            captureButton.layer.borderColor = UIColor.black.cgColor
            captureButton.layer.borderWidth = 2
            
            captureButton.layer.cornerRadius = min(captureButton.frame.width, captureButton.frame.height) / 2
        }
        
        func configCollectionView() {
            let layout = UICollectionViewFlowLayout()
            layout.scrollDirection = .horizontal
            layout.minimumInteritemSpacing = 20
            layout.minimumLineSpacing = 0
            //collectionView.backgroundColor = .systemGroupedBackground
            collectionView.isPagingEnabled = true
            collectionView.collectionViewLayout = layout
            collectionView.showsHorizontalScrollIndicator = true
        }
        
        styleCaptureButton()
        configureCameraController()
        configCollectionView()
    }
}

//MARK: - IBAction
extension TakeAPhotoViewController {
    @IBAction func toggleFlash(_ sender: UIButton) {
        if cameraController.flashMode == .on {
            cameraController.flashMode = .off
            toggleFlashButton.setImage(#imageLiteral(resourceName: "Flash Off Icon"), for: .normal)
        }
            
        else {
            cameraController.flashMode = .on
            toggleFlashButton.setImage(#imageLiteral(resourceName: "Flash On Icon"), for: .normal)
        }
    }
    
    @IBAction func captureImage(_ sender: UIButton) {
        cameraController.captureImage {(image, error) in
            guard let image = image else {
                print(error ?? "Image capture error")
                return
            }
            
            
            try? PHPhotoLibrary.shared().performChangesAndWait {

                GoogleAPI.taskDetect(form: image) { (result) in
                    guard let result = result else {
                        print("Don't have any text in image")
                        return
                    }
                    let object = GoogleOCR(context: DataController.shared.viewContext)
                    object.image = image.jpegData(compressionQuality: 0.5)
                    object.text = result.fullTextAnnotation.text
                    object.date = Date()
                    DataController.saveContext()
                    self.collectionView.reloadData()
                }
            
                PHAssetChangeRequest.creationRequestForAsset(from: image)
            }
        }
    }
    
}

extension TakeAPhotoViewController: UICollectionViewDelegate, UICollectionViewDelegateFlowLayout, UICollectionViewDataSource {
    
    
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return images.count
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        guard let cell = collectionView.dequeueReusableCell(withReuseIdentifier: K.ReuseCell.cameraCollectionReuseCell, for: indexPath) as? TakeAPhotoCollectionViewCell
            else { return UICollectionViewCell() }
        if let data = images[indexPath.row].image {
            cell.configImage(image: UIImage(data: data) ?? UIImage() )
        } else {
            cell.configImage(image: UIImage() )
        }
        
        cell.layer.borderWidth = 1
        cell.layer.borderColor = UIColor.white.cgColor
        return cell
    }
    
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        PresentaionManager.share.show(vc: .MainController)
    }
    
    //MARK: - UICollectionViewDelegateFlowLayout
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        let size = collectionView.frame.size.width/5
        return CGSize(width: size, height: size)
    }
    
}

